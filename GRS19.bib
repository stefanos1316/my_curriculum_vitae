@article{georgiou_software_2019,
	title = {Software {Development} {Lifecycle} for {Energy} {Efficiency}: {Techniques} and {Tools}},
	volume = {52},
	issn = {0360-0300},
	shorttitle = {Software {Development} {Lifecycle} for {Energy} {Efficiency}},
	url = {http://doi.acm.org/10.1145/3337773},
	doi = {10.1145/3337773},
	abstract = {Motivation: In modern it systems, the increasing demand for computational power is tightly coupled with ever higher energy consumption. Traditionally, energy efficiency research has focused on reducing energy consumption at the hardware level. Nevertheless, the software itself provides numerous opportunities for improving energy efficiency. Goal: Given that energy efficiency for it systems is a rising concern, we investigate existing work in the area of energy-aware software development and identify open research challenges. Our goal is to reveal limitations, features, and tradeoffs regarding energy-performance for software development and provide insights on existing approaches, tools, and techniques for energy-efficient programming. Method: We analyze and categorize research work mostly extracted from top-tier conferences and journals concerning energy efficiency across the software development lifecycle phases. Results: Our analysis shows that related work in this area has focused mainly on the implementation and verification phases of the software development lifecycle. Existing work shows that the use of parallel and approximate programming, source code analyzers, efficient data structures, coding practices, and specific programming languages can significantly increase energy efficiency. Moreover, the utilization of energy monitoring tools and benchmarks can provide insights for the software practitioners and raise energy-awareness during the development phase.},
	number = {4},
	urldate = {2019-09-26},
	journal = {ACM Comput. Surv.},
	author = {Georgiou, Stefanos and Rizou, Stamatia and Spinellis, Diomidis},
	month = aug,
	year = {2019},
	keywords = {approximate programming, code refactoring, coding practices, design patterns, energy efficiency, energy optimization, energy profiling, GreenIT, parallel programming, software development lifecycle, source code analysis},
	pages = {81:1--81:33},
}
